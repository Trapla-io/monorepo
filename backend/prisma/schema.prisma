// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @default(autoincrement()) @id

  email    String   @unique
  password String

  travel_books TravelBook[]
  customers Customer[]
  images Image[]

  default_travel_book_template String @default("flat-yellow")
  created_at DateTime @default(now())
}

model TravelBook {
  id        Int      @default(autoincrement()) @id
  
  title     String
  destination String?

  sections  Json[]
  new_sections  Section[]

  theme     Json?

  start_date DateTime?
  end_date   DateTime?

  user      User     @relation(fields: [user_id], references: [id])
  customer  Customer? @relation(fields: [customer_id], references: [id])

  customer_id Int?
  user_id   Int

  created_at DateTime @default(now())
}

model Section {
  id        Int      @default(autoincrement()) @id

  title     String
  label     String
  tag       String

  icon      String

  items     Json

  cover_image Json?

  travel_book TravelBook @relation(fields: [travel_book_id], references: [id])
  travel_book_id Int

  created_at DateTime @default(now())
}


model Customer {
  id        Int      @default(autoincrement()) @id

  first_name      String
  last_name       String

  email     String?

  travel_books TravelBook[]

  user User @relation(fields: [user_id], references: [id])
  user_id Int

  created_at DateTime @default(now())
}

model Image {
  id        Int      @default(autoincrement()) @id

  url       String

  user     User     @relation(fields: [user_id], references: [id])
  user_id  Int

  created_at DateTime @default(now())
}